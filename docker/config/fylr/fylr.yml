fylr:
  debug:
    skipTerms: false

  logger:
    noColor: true

  db:
    maxOpenConns: 20
    maxIdleConns: 10
    # The init block is used to pre-fill the database when its created or purged.
    init:
      # Path to base config file. If set, on a fresh install or after a purge this
      # file is used and preloaded into the base config. The format of the file is
      # JSON in API format. Defaults to "", which starts with an empty base
      # config. The empty base config uses defaults which are defined in
      # resources/baseconfig/baseconfig.yml. Unset keys (from a partial base
      # config file), are set to their defaults.
      configFile: ""

      # Inline base config. Works like configFile but used the inlined
      # baseconfig setting in this .yml file. Runs after configFile, so everything
      # in config overwrites settings from configFile. Default is empty.
      config:
        system:
          config:
            purge:
              allow_purge: true
              purge_storage: true
            location_defaults:
              originals: S3
              versions: S3
              backups: localfile

      # To setup a purgeable system with default storage locations
      # locfile & locs3, configure the following. The location_default map
      # accepts location ids as well as names:
      #
      # config:
      #   system:
      #     config:
      #       purge:
      #         allow_purge: true
      #         purge_storage: true
      #       location_defaults:
      #         originals: locfile
      #         versions: locs3
      #         backups: locfile

      # preconfigure locations for empty databases
      locations:
        # the location's name can be any string which you choose
        #
        # Inside the storage location fylr will create a structure like this:
        #
        # [prefix/]fylr-UUID/originals
        # [prefix/]fylr-UUID/versions
        # [prefix/]fylr-UUID/backups
        #
        # The driver "file" will create directories inside the configured
        # top level directory but never remove them. So, if you use purge
        # a lot, FYLR will leave empty directories on disk.
        localfile:
          # The kind is either "file" or "s3" (see below)
          kind: file
          # Each location can configure a prefix which will
          # be attached before the file to be created
          prefix: "postgres/"
          # Set to true if files in this location can be
          # purged by FYLR (if the purge api call is used)
          allow_purge: true
          config:
            file:
              dir: "/fylr/files/backups"
        S3:
          kind: s3
          prefix: "postgres/"
          allow_purge: true
          config:
            s3:
              bucket: postgres
              accesskey: "minio"
              secretkey: "minio123"
              region: "us-east-1"
              ssl: false

  s3:
    accessKeyID: "minio"
    secretAccessKey: "minio123"
    bucketLocation: "us-east-1"
    ssl: false

  elastic:
    parallel: 4
    maxMem: 100mb
    objectsPerJob: 1000

  execserver:
    parallel: 2
    pluginJobTimeoutSec: 240
    connectTimeoutSec: 120

  plugins:
    - "/fylr/files/plugins/easydb"
    - "/fylr/files/plugins/fylr/example"

  allowpurge: true

  resources: "/fylr/files/resources"

  services:
    webapp:
      path: "/fylr/files/webfrontend"
      oauth2:
        clientID: web-client
        clientSecret: foo

    api:
      oauth2Server:
        # This secret is used to sign authorize codes, access and refresh
        # tokens. If unset, a random string is used. If multiple fylr server are
        # serving the same instance, the signingSecret needs to be configured.
        # The format is a 32-byte string.
        signingSecret: "d4b207ce131411ed8c7300155dd22658"
        clients:
          web-client:
            clientID: web-client
            # Higher costs than 10 could significantly increase operating costs, but also increase safety.
            # generate a bcrypted secret with:
            #   htpasswd -nbBC 10 "" my-new-webclient-password | tr -d ':\n'
            clientSecret: $2y$16$MDOkFjSNZdfnVwA3cZSOjuZP8DPshwAda7T99GhLLqff8KyGYvZ4K
            redirectURIs:
              - http://fylr.localhost:8080/oauth2/callback
            scopes: ["read", "write", "offline"]
          app-client:
            clientID: app-client
            clientSecret: $2y$12$vHCyS42d0RpICdKoXKP0J.w1cschxjf.Ln43I9NYyl1u0W7vevjQS
            redirectURIs:
              - fylr.app.scheme:///
            scopes: ["read", "write", "offline"]

    backend:
      inspect:
        backup:
          path: /tmp/fylrctrl
          fylrctl: fylrctl
          psql: psql
          sqlite3: sqlite3
